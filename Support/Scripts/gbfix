#! /bin/bash

# This script downloads repair scripts from General Bytes and by default runs the script
# Written to eliminate command line errors and to automate critical data collection
# by Chuck Wernicke on 7-24-2018 for General Bytes exclusively on the Ubuntu 16.04 LTS environment
# version 1.1
# execution:
# wget https://raw.githubusercontent.com/DPuppybreath/CAS/master/Support/Scripts/gbfix
# chmod +x gbfix
# sudo ./gbfix

# init vars and const
export SCRIPT_DIR="/batm/download/"
export DL_HEAD="https://raw.githubusercontent.com/DPuppybreath/CAS/master/Support/Scripts/"
echo
echo "Welcome to the GB scripted repair tool!"

MUID=$( id -u )
if [[ $MUID != 0 ]]; then
	echo "This script needs to be run as sudo:"
	echo "sudo ./gbfix"
	exit 3
fi

# examine the command line
if [[ $# = 0 ]]; then 
	read -p "Please enter the script code sent by the support team: " SCRIPT_CODE
	echo
else
	SCRIPT_CODE=$1
fi

# the script must be assigned, or bail
if [[ -z $SCRIPT_CODE ]]; then
	echo "A script code from GB support is required to use this tool!"
	exit 3
fi

# set our paths
DL_URL=$DL_HEAD$SCRIPT_CODE
SCRIPT_CMD=$SCRIPT_DIR$SCRIPT_CODE

# overwrite an existing file, or exit
if [[ -e "$SCRIPT_CMD" ]]; then
	read -n 1 -p "The file already exists. Overwrite it? (Y/n): " YesNo
	echo
	if [ "${YesNo,,}" = "y" ]; then
		rm -f $SCRIPT_CMD
		echo $SCRIPT_CMD" deleted."
	else
		echo "Aborting download. The script file has been left intact at:"
		echo $SCRIPT_CMD
		exit 13
	fi
fi

# download specified script if available
wget --quiet --tries=5 --output-document=$SCRIPT_CMD $DL_URL
if [ $? -ne 0 ]; then
		echo "Download failed: Error retrieving the GB script "$SCRIPT_CODE
		echo "Scripts expire, and may be removed from the server without warning."
		echo "Script names are case-sensitive."
		echo "Please verify that the code sent to you is EXACT!!"
		echo
		exit 86
fi

chmod +x $SCRIPT_CMD
if [ $? -ne 0 ]; then
	echo "Failure: Error setting executable flag on script "$SCRIPT_CODE
	if [[ ! -e $SCRIPT_CMD ]]; then echo "The repair script is missing!"; fi
	echo "Please restart this script and try again."
	exit 3
fi
echo "Script successfully downloaded, installed, and set as executable..."
echo "Execute this command to run the script arbitrarily in the future:"
echo "sudo $SCRIPT_CMD"
echo

# optionally run the script
read -n 1 -p "Run the script now? (Y/n): " YesNo
echo
echo
if [ "${YesNo,,}" = "y" ]; then
	#execute the script
	/bin/bash $SCRIPT_CMD;
	ReturnCode=$?
	echo
	if [ $ReturnCode -eq 0 ]; then
		echo "FINISHED! Script executed successfully..."
	else
		if [[ $ReturnCode -eq 86 ]]; then 
			echo "Download error."
		elif [[ $ReturnCode -eq 13 ]]; then 
			echo "Script execution has been aborted at user request."
		elif  [[ $ReturnCode -eq 3 ]]; then 
			echo "Critical components missing."
		else
			echo "Unexpected failure executing script, code: "$SCRIPT_CODE; 
			if [[ ! -e $SCRIPT_CMD ]]; then echo "The repair script is missing!"; fi
		fi
		echo "Please restart this and try again."
		exit 1
	fi
	
	# offer to kill the script
	read -n 1 -p "The script completed, would you like to delete it now? (Y/n)" YesNo
	echo
	if [ "${YesNo,,}" = "y" ]; then
		#delete the script
		echo "Deleting: "$SCRIPT_CMD
		rm -f $SCRIPT_CMD
	fi
else
	echo "To run the script, type the following at anytime:"
	echo "sudo "$SCRIPT_CMD
	echo
fi

# cleanup

echo "Thank you for using General Bytes products!"
echo
